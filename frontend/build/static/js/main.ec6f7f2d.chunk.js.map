{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/Footer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productReviewCreate","productUpdate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"iMA+BMA,EAAUC,0BAAgB,CAC9BC,YCLgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,IC7BgC,uBD8B9B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC9BgC,uBD+B9B,MAAO,CACLG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,ICpC6B,oBDqC3B,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDRXS,eCYmC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,IC9CmC,0BD+CjC,OAAO,aAAEC,SAAS,GAASJ,GAC7B,IC/CmC,0BDgDjC,MAAO,CAAEI,SAAS,EAAOM,QAASR,EAAOG,SAC3C,IChDgC,uBDiD9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDvBXY,cC2BkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICvDkC,yBDwDhC,MAAO,CAAEC,SAAS,GACpB,ICxDkC,yBDyDhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICzD+B,sBD0D7B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDnCXc,cCuCkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IChEkC,yBDiEhC,MAAO,CAAEC,SAAS,GACpB,ICjEkC,yBDkEhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IClE+B,sBDmE7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICnEgC,uBDoE9B,MAAO,GACT,QACE,OAAOL,IDjDXe,oBCoEwC,WAAyB,IAAxBf,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICpFyC,gCDqFvC,MAAO,CAAEC,SAAS,GACpB,ICrFyC,gCDsFvC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICtFsC,6BDuFpC,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICvFuC,8BDwFrC,MAAO,GACT,QACE,OAAOL,ID9EXgB,cCoDkC,WAAsC,IAArChB,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,IC1EkC,yBD2EhC,MAAO,CAAEC,SAAS,GACpB,IC3EkC,yBD4EhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IC5E+B,sBD6E7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC7EgC,uBD8E9B,MAAO,CAAEK,QAAS,IACpB,QACE,OAAOV,ID9DXiB,gBCiFoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,IC9F+B,sBD+F7B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC/F+B,sBDgG7B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,IChG4B,mBDiG1B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDzFXkB,KGhCyB,WAGrB,IAFJlB,EAEG,uDAFK,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACG,uCACH,OAAQA,EAAOC,MACb,ICZyB,gBDavB,IAAMkB,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAEd,UAAYW,EAAKX,WAEjE,OAAIY,EACK,2BACFtB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAItC,2BAAKxB,GAAZ,IAAmBmB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAEvD,IC1B4B,mBD2B1B,OAAO,2BACFrB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAGlE,IC9BsC,6BD+BpC,OAAO,2BACFL,GADL,IAEEoB,gBAAiBlB,EAAOG,UAG5B,ICnCoC,2BDoClC,OAAO,2BACFL,GADL,IAEE2B,cAAezB,EAAOG,UAE1B,QACE,OAAOL,IHLX4B,UKZ8B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,IC9B8B,qBD+B5B,MAAO,CAAEC,SAAS,GACpB,IC/B8B,qBDgC5B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IChC2B,kBDiCzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICjCuB,cDkCrB,MAAO,GACT,QACE,OAAOL,ILEX8B,aKEiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICxCiC,wBDyC/B,MAAO,CAAEC,SAAS,GACpB,ICzCiC,wBD0C/B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IC1C8B,qBD2C5B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ILVX+B,YKcgC,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAClE,OAAQA,EAAOC,MACb,ICjDgC,uBDkD9B,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,IClDgC,uBDmD9B,MAAO,CAAEA,SAAS,EAAO4B,KAAM9B,EAAOG,SACxC,ICnD6B,oBDoD3B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICpD8B,qBDqD5B,MAAO,CAAE2B,KAAM,IACjB,QACE,OAAOhC,ILxBXiC,kBK4BsC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IC3DuC,8BD4DrC,MAAO,CAAEC,SAAS,GACpB,IC5DuC,8BD6DrC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC3D,IC7DoC,2BD8DlC,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ILpCXkC,SKwC6B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICnE6B,oBDoE3B,MAAO,CAAEC,SAAS,GACpB,ICpE6B,oBDqE3B,MAAO,CAAEA,SAAS,EAAO+B,MAAOjC,EAAOG,SACzC,ICrE0B,iBDsExB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICtE2B,kBDuEzB,MAAO,CAAE8B,MAAO,IAClB,QACE,OAAOnC,ILlDXoC,WKsD+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,IC7E+B,sBD8E7B,MAAO,CAAEC,SAAS,GACpB,IC9E+B,sBD+E7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,IC/E4B,mBDgF1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAEzC,QACE,OAAOL,IL/DXqC,WKmE+B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACjE,OAAQA,EAAOC,MACb,ICvF+B,sBDwF7B,MAAO,CAAEC,SAAS,GACpB,ICxF+B,sBDyF7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICzF4B,mBD0F1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC1F6B,oBD2F3B,MAAO,CACL2B,KAAM,IAEV,QACE,OAAOhC,IL/EXsC,YOvBgC,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,IC1BgC,uBD2B9B,MAAO,CACLC,SAAS,GAEb,IC7BgC,uBD8B9B,MAAO,CACLA,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAElB,IClC6B,oBDmC3B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPMXwC,aOFiC,WAG7B,IAFJxC,EAEG,uDAFK,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAC1DlB,EACG,uCACH,OAAQA,EAAOC,MACb,IC/CiC,wBDgD/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAEb,ICnDiC,wBDoD/B,MAAO,CACLA,SAAS,EACTmC,MAAOrC,EAAOG,SAElB,ICvD8B,qBDwD5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPlBX0C,SOsB6B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICjE6B,oBDkE3B,MAAO,CACLC,SAAS,GAEb,ICpE6B,oBDqE3B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,ICxE0B,iBDyExB,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,IC5E2B,kBD6EzB,MAAO,GACT,QACE,OAAOL,IPxCX2C,aO4CiC,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,IC1EiC,wBD2E/B,MAAO,CACLC,SAAS,GAEb,IC7EiC,wBD8E/B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,ICjF8B,qBDkF5B,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,ICrF+B,sBDsF7B,MAAO,GACT,QACE,OAAOL,IP9DX4C,YOkEgC,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACpE,OAAQA,EAAOC,MACb,IC1GiC,wBD2G/B,MAAO,CACLC,SAAS,GAEb,IC7GiC,wBD8G/B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,ICjH8B,qBDkH5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,ICrH+B,sBDsH7B,MAAO,CACLwC,OAAQ,IAEZ,QACE,OAAO7C,IPtFX8C,UO0F8B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACb,IC9H8B,qBD+H5B,MAAO,CACLC,SAAS,GAEb,ICjI8B,qBDkI5B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,ICrI2B,kBDsIzB,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,MPxGP+C,EAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAEEG,EAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAMEI,EAAe,CACnBnC,KAAM,CACJC,UAAW4B,EACX3B,gBAP+B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOFrB,UAAW,CAAEC,SAAUuB,IAGnBE,EAAa,CAACC,KAULC,EANDC,sBACZ5D,EACAwD,EACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,K,uDSnE1BM,EAZA,WACb,OACE,gCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,oBAAf,8B,2DCsBKC,EA3BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBAC1BC,EAD0B,KACjBC,EADiB,KAWjC,OACE,kBAACC,EAAA,EAAD,CAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEL,EAAQM,OACVR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIgBC,QAAM,GACnC,kBAACN,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL2E,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,qBACZlB,UAAU,oBAEZ,kBAACmB,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,kBAAkBpB,UAAU,OAA1D,Y,yCCyFOqB,EAAiB,SAACC,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACPpF,KL1G8B,yBKuGE,EAQ9BqF,IADW3D,EAPmB,EAOhCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAbJ,SAiBXC,IAAMC,IAAN,qBAAwBT,GAAMI,GAjBnB,gBAiB1BM,EAjB0B,EAiB1BA,KAERT,EAAS,CACPpF,KL1H8B,uBK2H9BE,QAAS2F,IArBuB,kDAwBlCT,EAAS,CACPpF,KL9H2B,oBK+H3BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BoB,0DAAR,yDC1CfC,EA9DA,WACb,IAAMZ,EAAWa,cAETvE,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAMR,OACE,gCACE,kBAACyE,EAAA,EAAD,CAAQC,GAAG,OAAOnB,QAAQ,OAAOoB,OAAO,KAAKC,kBAAgB,GAC3D,kBAAC5C,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAe6C,GAAG,KAChB,kBAACJ,EAAA,EAAOK,MAAR,iBAEF,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBxB,GAAG,oBAClB,kBAAC,IAAD,CAAOyB,OAAQ,gBAAG7C,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,OACpD,kBAAC8C,EAAA,EAAD,CAAKhD,UAAU,WACb,kBAAC,gBAAD,CAAe0C,GAAG,SAChB,kBAACM,EAAA,EAAIC,KAAL,KACE,uBAAGjD,UAAU,yBADf,SAIDnC,EACC,kBAACqF,EAAA,EAAD,CAAaC,MAAOtF,EAASiD,KAAMQ,GAAG,YACpC,kBAAC,gBAAD,CAAeoB,GAAG,YAChB,kBAACQ,EAAA,EAAYE,KAAb,iBAEF,kBAACF,EAAA,EAAYE,KAAb,CAAkBC,QAzBZ,WACpB9B,GDkDwB,SAACA,GAC3BvC,aAAasE,WAAW,YACxB/B,EAAS,CAAEpF,KL/Dc,gBKgEzBoF,EAAS,CAAEpF,KLvDqB,uBKwDhCoF,EAAS,CAAEpF,KHpDsB,wBGqDjCoF,EAAS,CAAEpF,KL/CkB,yBMgBb,WAKF,kBAAC,gBAAD,CAAeuG,GAAG,UAChB,kBAACM,EAAA,EAAIC,KAAL,KACE,uBAAGjD,UAAU,gBADf,YAKHnC,GAAYA,EAAS0F,SACpB,kBAACL,EAAA,EAAD,CAAaC,MAAM,QAAQ7B,GAAG,aAC5B,kBAAC,gBAAD,CAAeoB,GAAG,mBAChB,kBAACQ,EAAA,EAAYE,KAAb,eAEF,kBAAC,gBAAD,CAAeV,GAAG,sBAChB,kBAACQ,EAAA,EAAYE,KAAb,kBAEF,kBAAC,gBAAD,CAAeV,GAAG,oBAChB,kBAACQ,EAAA,EAAYE,KAAb,uB,SCvDdI,EAAS,SAAC,GAA4B,IAA1BvC,EAAyB,EAAzBA,MAAOwC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,yBAAK1D,UAAU,UACb,8BACE,uBACE2D,MAAO,CAAED,SACT1D,UACEiB,GAAS,EACL,cACAA,GAAS,GACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACT1D,UACEiB,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACT1D,UACEiB,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACT1D,UACEiB,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACT1D,UACEiB,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BAAOwC,GAAQA,KAKrBD,EAAOI,aAAe,CACpBF,MAAO,UACPzC,MAAO,GAQMuC,QClDAK,EA1BC,SAAC,GAAiB,IAAfnH,EAAc,EAAdA,QACjB,OACE,kBAACoH,EAAA,EAAD,CAAM9D,UAAU,oBACd,kBAAC,OAAD,CAAM0C,GAAE,mBAAchG,EAAQqH,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKvH,EAAQwH,MAAO9C,QAAQ,SAGxC,kBAAC0C,EAAA,EAAKK,KAAN,KACE,kBAAC,OAAD,CAAMzB,GAAE,mBAAchG,EAAQqH,MAC5B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,gCAAS3H,EAAQoE,QAGrB,kBAACgD,EAAA,EAAKQ,KAAN,CAAWD,GAAG,OACZ,kBAAC,EAAD,CACEpD,MAAOvE,EAAQ6H,OACfd,KAAI,UAAK/G,EAAQ8H,WAAb,eAIR,kBAACV,EAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,IAAqB3H,EAAQ+H,U,SCtB/BC,EAAU,SAAC,GAA2B,IAAzBtD,EAAwB,EAAxBA,QAASuD,EAAe,EAAfA,SAC1B,OAAO,kBAACC,EAAA,EAAD,CAAOxD,QAASA,GAAUuD,IAEnCD,EAAQd,aAAe,CACrBxC,QAAS,QAEIsD,Q,SCWAG,EAjBA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACLsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,UAGX,0BAAMpF,UAAU,WAAhB,gB,SCYSqF,EAvBE,SAAC,GAAoD,IAAlD/I,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApCgH,eAAoC,SAAjBnD,EAAiB,uDAAP,GAC5D,OACE9D,EAAQ,GACN,kBAACgJ,EAAA,EAAD,KACG,YAAIC,MAAMjJ,GAAOkJ,QAAQ/H,KAAI,SAACD,GAAD,OAC5B,kBAAC,gBAAD,CACEiI,IAAKjI,EAAI,EACTkF,GACGa,EAAD,6BAI0B/F,EAAI,GAH1B4C,EAAO,kBACMA,EADN,iBACsB5C,EAAI,GAD1B,gBAEIA,EAAI,IAIrB,kBAAC8H,EAAA,EAAWlC,KAAZ,CAAiBsC,OAAQlI,EAAI,IAAMjB,GAAOiB,EAAI,S,kBCM7CmI,EAAe,eAACvF,EAAD,uDAAW,GAAIwF,EAAf,uDAA4B,GAA5B,8CAAmC,WAC7DrE,GAD6D,iBAAAE,EAAA,sEAI3DF,EAAS,CAAEpF,KhB7BqB,yBgByB2B,SAKpC2F,IAAMC,IAAN,gCACI3B,EADJ,uBAC0BwF,IANU,gBAKnD5D,EALmD,EAKnDA,KAGRT,EAAS,CAAEpF,KhBhCqB,uBgBgCOE,QAAS2F,IARW,gDAU3DT,EAAS,CACPpF,KhBlC2B,oBgBmC3BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAf6C,yDAAnC,uDAoBf2D,GAAqB,SAACvE,GAAD,8CAAQ,WAAOC,GAAP,iBAAAE,EAAA,sEAEtCF,EAAS,CAAEpF,KhB3CwB,4BgByCG,SAGf2F,IAAMC,IAAN,wBAA2BT,IAHZ,gBAG9BU,EAH8B,EAG9BA,KACRT,EAAS,CAAEpF,KhB5CwB,0BgB4COE,QAAS2F,IAJb,gDAMtCT,EAAS,CACPpF,KhB9C8B,uBgB+C9BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAXwB,yDAAR,uDCLnB4D,GAhCS,WACtB,IAAMvE,EAAWa,cAEXnF,EAAkBoF,aAAY,SAACrG,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJA8J,qBAAU,WACRxE,EDyL2B,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,sEAEjCF,EAAS,CAAEpF,KhB/KoB,wBgB6KE,SAGV2F,IAAMC,IAAN,qBAHU,gBAGzBC,EAHyB,EAGzBA,KACRT,EAAS,CAAEpF,KhBhLoB,sBgBgLOE,QAAS2F,IAJd,gDAMjCT,EAAS,CACPpF,KhBlL0B,mBgBmL1BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAXmB,yDAAN,yDCxL1B,CAACX,IAEGnF,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,kBAACwJ,EAAA,EAAD,CAAUC,MAAM,QAAQjG,UAAU,WAC/B/D,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAACsJ,EAAA,EAAS5C,KAAV,CAAeqC,IAAK/I,EAAQqH,KAC1B,kBAAC,OAAD,CAAMrB,GAAE,mBAAchG,EAAQqH,MAC5B,kBAACmC,EAAA,EAAD,CAAOjC,IAAKvH,EAAQwH,MAAOiC,IAAKzJ,EAAQoE,KAAMsF,OAAK,IACnD,kBAACJ,EAAA,EAASK,QAAV,CAAkBrG,UAAU,oBAC1B,4BACGtD,EAAQoE,KADX,MACoBpE,EAAQ+H,MAD5B,a,SC1BR6B,GAAO,SAAC,GAAsC,IAApCnD,EAAmC,EAAnCA,MAAOoD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,kBAACC,GAAA,EAAD,KACE,+BAAQtD,GACR,0BAAMrC,KAAK,cAAc4F,QAASH,IAClC,0BAAMzF,KAAK,WAAW4F,QAASF,MAKrCF,GAAK1C,aAAe,CAClBT,MAAO,wBACPoD,YAAa,wBACbC,SAAU,mDAGGF,UCyCAK,GA/CI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdxG,EAAUwG,EAAMC,OAAOzG,QACvBwF,EAAagB,EAAMC,OAAOjB,YAAc,EAExCrE,EAAWa,cACXrG,EAAcsG,aAAY,SAACrG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAMxC,OAJAyJ,qBAAU,WACRxE,EAASoE,EAAavF,EAASwF,MAC9B,CAACrE,EAAUnB,EAASwF,IAGrB,oCACE,kBAAC,GAAD,MACExF,EAGA,kBAAC,OAAD,CAAMsC,GAAG,IAAI1C,UAAU,iBAAvB,WAFA,kBAAC,GAAD,MAMF,+CACC5D,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,oCACE,kBAACsD,EAAA,EAAD,KACG7D,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAACqD,EAAA,EAAD,CAAK0F,IAAK/I,EAAQqH,IAAK+C,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,EAAD,CAASvK,QAASA,SAIxB,kBAAC,EAAD,CACEJ,MAAOA,EACPC,KAAMA,EACN6D,QAASA,GAAoB,Q,UCgK1B8G,GA9LO,SAAC,GAAwB,IAAtBhH,EAAqB,EAArBA,QAAS0G,EAAY,EAAZA,MAAY,EACtBzG,mBAAS,GADa,mBACrCgH,EADqC,KAChCC,EADgC,OAEhBjH,mBAAS,GAFO,mBAErCoE,EAFqC,KAE7B8C,EAF6B,OAGdlH,mBAAS,IAHK,mBAGrCmH,EAHqC,KAG5BC,EAH4B,KAOtChG,EAAWa,cACX3F,EAAiB4F,aAAY,SAACrG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAEFd,EAAsBsF,aAAY,SAACrG,GAAD,OAAWA,EAAMe,uBAE9CyK,EAEPzK,EAFFF,QACO4K,EACL1K,EADFP,MAGFuJ,qBAAU,WACJyB,IACFE,MAAM,oBACNL,EAAU,GACVE,EAAW,IACXhG,EAAS,CAAEpF,KpBtB0B,iCoBwBvCoF,EAASsE,GAAmBe,EAAMC,OAAOvF,OACxC,CAACC,EAAUqF,EAAOY,IAWrB,OACE,oCACE,kBAAC,OAAD,CAAMxH,UAAU,oBAAoB0C,GAAG,KAAvC,WAGCtG,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,oCACE,kBAAC,GAAD,CAAM2G,MAAOzG,EAAQoE,OACrB,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACb,EAAA,EAAD,CAAOjC,IAAKvH,EAAQwH,MAAOiC,IAAKzJ,EAAQoE,KAAMsF,OAAK,KAErD,kBAACrG,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,4BAAK1G,EAAQoE,OAEf,kBAAC6G,GAAA,EAAUvE,KAAX,KACE,kBAAC,EAAD,CACEnC,MAAOvE,EAAQ6H,OACfd,KAAI,UAAK/G,EAAQ8H,WAAb,eAGR,kBAACmD,GAAA,EAAUvE,KAAX,gBAAyB1G,EAAQ+H,OACjC,kBAACkD,GAAA,EAAUvE,KAAX,sBACiB1G,EAAQ6J,eAI7B,kBAACxG,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACjD,EAAA,EAAD,KACE,kBAAC6D,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACE,oCAAUrD,EAAQ+H,UAIxB,kBAACkD,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,KACGrD,EAAQkL,aAAe,EAAI,WAAa,kBAI9ClL,EAAQkL,aAAe,GACtB,kBAACD,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KACE,kBAACO,EAAA,EAAKO,QAAN,CACEwD,GAAG,SACHpD,MAAOkG,EACPpG,SAAU,SAACP,GAAD,OAAO4G,EAAO5G,EAAEQ,OAAOC,SAEhC,YAAIsE,MAAM7I,EAAQkL,cAAcpC,QAAQ/H,KACvC,SAACD,GAAD,OACE,4BAAQiI,IAAKjI,EAAI,EAAGyD,MAAOzD,EAAI,GAC5BA,EAAI,UASrB,kBAACmK,GAAA,EAAUvE,KAAX,KACE,kBAACjC,EAAA,EAAD,CACEkC,QArFK,WACvBnD,EAAQS,KAAR,gBAAsBiG,EAAMC,OAAOvF,GAAnC,gBAA6C6F,KAqF3BnH,UAAU,YACV7D,KAAK,SACL0L,SAAmC,IAAzBnL,EAAQkL,cAJpB,oBAaV,kBAAC9H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,uCAC4B,IAA3BrK,EAAQC,QAAQmL,QAAgB,kBAAC,EAAD,mBACjC,kBAACH,GAAA,EAAD,CAAWvG,QAAQ,SAChB1E,EAAQC,QAAQc,KAAI,SAACsK,GAAD,OACnB,kBAACJ,GAAA,EAAUvE,KAAX,CAAgBqC,IAAKsC,EAAOhE,KAC1B,gCAASgE,EAAOjH,MAChB,kBAAC,EAAD,CAAQG,MAAO8G,EAAOxD,SACtB,2BAAIwD,EAAOC,UAAUC,UAAU,EAAG,KAClC,2BAAIF,EAAOT,aAGf,kBAACK,GAAA,EAAUvE,KAAX,KACE,uDACCqE,GACC,kBAAC,EAAD,CAASrG,QAAQ,UAAUqG,GAE5B5J,EACC,kBAACyC,EAAA,EAAD,CAAMC,SAhHF,SAACC,GJ4GU,IAAC0H,EAAWH,EI3G3CvH,EAAEC,iBACFc,GJ0GgC2G,EI1GHtB,EAAMC,OAAOvF,GJ0GCyG,EI1GG,CAAExD,SAAQ+C,WJ0GzB,uCAAuB,WACxD/F,EACAC,GAFwD,mBAAAC,EAAA,sEAKtDF,EAAS,CACPpF,KhBpJuC,kCgB8Ia,EAWlDqF,IADW3D,EAVuC,EAUpDD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAhBgB,SAoBhDC,IAAMqG,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQrG,GApBT,OAsBtDH,EAAS,CACPpF,KhBpKuC,kCgB6Ia,gDA0BtDoF,EAAS,CACPpF,KhBvKoC,6BgBwKpCE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BwC,yDAAvB,4DIKb,kBAAC5B,EAAA,EAAK8H,MAAN,CAAYC,UAAU,UACpB,kBAAC/H,EAAA,EAAKgI,MAAN,eACA,kBAAChI,EAAA,EAAKO,QAAN,CACEwD,GAAG,SACHpD,MAAOsD,EACPxD,SAAU,SAACP,GAAD,OAAO6G,EAAU7G,EAAEQ,OAAOC,SAEpC,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,mBAGJ,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,WACpB,kBAAC/H,EAAA,EAAKgI,MAAN,gBACA,kBAAChI,EAAA,EAAKO,QAAN,CACEwD,GAAG,WACHkE,IAAI,IACJtH,MAAOqG,EACPvG,SAAU,SAACP,GAAD,OAAO+G,EAAW/G,EAAEQ,OAAOC,WAGzC,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,WAKF,kBAAC,EAAD,eACS,kBAAC,OAAD,CAAMsB,GAAG,UAAT,WADT,6BC9LP8F,GAAY,SAAClH,EAAI6F,GAAL,8CAAa,WAAO5F,EAAUC,GAAjB,iBAAAC,EAAA,sEACbK,IAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KACRT,EAAS,CACPpF,KnBXyB,gBmBYzBE,QAAS,CACPK,QAASsF,EAAK+B,IACdjD,KAAMkB,EAAKlB,KACXoD,MAAOlC,EAAKkC,MACZO,MAAOzC,EAAKyC,MACZmD,aAAc5F,EAAK4F,aACnBT,SAIJnI,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAUlH,IAAWtE,KAAKC,YAd7B,2CAAb,yDCoHVwL,GA7GI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAU1I,EAAc,EAAdA,QAC/BgI,EAAYtB,EAAMC,OAAOvF,GAEzB6F,EAAMyB,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhExH,EAAWa,cAGTjF,EADKkF,aAAY,SAACrG,GAAD,OAAWA,EAAMkB,QAClCC,UACR6L,QAAQC,IAAI9L,GAEZ4I,qBAAU,WACJmC,GACF3G,EAASiH,GAAUN,EAAWf,MAE/B,CAAC5F,EAAU2G,EAAWf,IAEzB,IAAM+B,EAAwB,SAAC5H,GAC7BC,EDR0B,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC/CD,EAAS,CACPpF,KnB1B4B,mBmB2B5BE,QAASiF,IAGXtC,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAUlH,IAAWtE,KAAKC,aCEtDgM,CAAe7H,KAS1B,OACE,kBAACxB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,6CACsB,IAArB5J,EAAU2K,OACT,kBAAC,EAAD,4BACsB,kBAAC,OAAD,CAAMpF,GAAG,KAAT,YAGtB,kBAACiF,GAAA,EAAD,CAAWvG,QAAQ,SAChBjE,EAAUM,KAAI,SAACJ,GAAD,OACb,kBAACsK,GAAA,EAAUvE,KAAX,CAAgBqC,IAAKpI,EAAKX,SACxB,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACb,EAAA,EAAD,CAAOjC,IAAK5G,EAAK6G,MAAOiC,IAAK9I,EAAKyD,KAAMsF,OAAK,EAACgD,SAAO,KAEvD,kBAACrJ,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAAC,OAAD,CAAMrE,GAAE,mBAAcrF,EAAKX,UAAYW,EAAKyD,OAE9C,kBAACf,EAAA,EAAD,CAAKgH,GAAI,GAAT,IAAc1J,EAAKoH,OACnB,kBAAC1E,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACzG,EAAA,EAAKO,QAAN,CACEwD,GAAG,SACHpD,MAAO5D,EAAK8J,IACZpG,SAAU,SAACP,GAAD,OACRe,EACEiH,GAAUnL,EAAKX,QAASoM,OAAOtI,EAAEQ,OAAOC,WAI3C,YAAIsE,MAAMlI,EAAKuK,cAAcpC,QAAQ/H,KAAI,SAACD,GAAD,OACxC,4BAAQiI,IAAKjI,EAAI,EAAGyD,MAAOzD,EAAI,GAC5BA,EAAI,QAKb,kBAACuC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAAC5F,EAAA,EAAD,CACEhF,KAAK,SACLiF,QAAQ,QACRiC,QAAS,kBAAM6F,EAAsB7L,EAAKX,WAE1C,uBAAGsD,UAAU,0BAS7B,kBAACD,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACjD,EAAA,EAAD,KACE,kBAAC6D,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,yCACajG,EAAUkM,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAK8J,MAAK,GAD7D,WADF,IAMGhK,EACEkM,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAK8J,IAAM9J,EAAKoH,QAAO,GACnD8E,QAAQ,IAEb,kBAAC5B,GAAA,EAAUvE,KAAX,KACE,kBAACjC,EAAA,EAAD,CACEhF,KAAK,SACL6D,UAAU,YACV6H,SAA+B,IAArB1K,EAAU2K,OACpBzE,QA5EU,WACtBnD,EAAQS,KAAK,8BAuEH,6BC7FC6I,GAZO,SAAC,GAAkB,IAAhB7E,EAAe,EAAfA,SACrB,OACI,kBAAC9E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,UAAU,6BACX,kBAACD,EAAA,EAAD,CAAK0J,GAAI,GAAI1C,GAAI,GACZpC,MCsDN+E,GArDK,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,SAAU1I,EAAc,EAAdA,QAAc,EACjBC,mBAAS,IADQ,mBACpCwJ,EADoC,KAC7BC,EAD6B,OAEXzJ,mBAAS,IAFE,mBAEpC0J,EAFoC,KAE1BC,EAF0B,KAIrCvI,EAAWa,cAEXxE,EAAYyE,aAAY,SAAArG,GAAK,OAAIA,EAAM4B,aACrCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBkM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAG,IAEjEhD,qBAAU,WACHlI,GACCqC,EAAQS,KAAKoJ,KAElB,CAAC7J,EAASrC,EAAUkM,IAQvB,OACI,kBAAC,GAAD,KACI,uCACCvN,GAAS,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAACkE,EAAA,EAAD,CAAMC,SAXQ,SAACC,GACnBA,EAAEC,iBACFc,EfCa,SAACoI,EAAOE,GAAR,8CAAqB,WAAOtI,GAAP,mBAAAE,EAAA,sEAEtCF,EAAS,CACPpF,KLhC4B,uBKmCxBuF,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,IAAMqG,KAC3B,mBACA,CAAEwB,QAAOE,YACTnI,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAMRT,EAAS,CACPpF,KL/C4B,qBKgD5BE,QAAS2F,IAGXhD,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAU1G,IAvBV,kDAyBtCT,EAAS,CACPpF,KLrDyB,kBKsDzBE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BwB,0DAArB,sDeDJ8H,CAAML,EAAOE,MAUd,kBAACvJ,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SAClB,kBAAC/H,EAAA,EAAKgI,MAAN,sBACA,kBAAChI,EAAA,EAAKO,QAAN,CAAc1E,KAAK,QAAQ+E,YAAY,cAAcD,MAAO0I,EAAO5I,SAAU,SAACP,GAAD,OAAKoJ,EAASpJ,EAAEQ,OAAOC,WAGxG,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,YAClB,kBAAC/H,EAAA,EAAKgI,MAAN,iBACA,kBAAChI,EAAA,EAAKO,QAAN,CAAc1E,KAAK,WAAW+E,YAAY,iBAAiBD,MAAO4I,EAAU9I,SAAU,SAACP,GAAD,OAAKsJ,EAAYtJ,EAAEQ,OAAOC,WAGpH,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,YAKJ,kBAACtB,EAAA,EAAD,CAAKE,UAAU,QACX,kBAACD,EAAA,EAAD,sBACc,kBAAC,OAAD,CAAM2C,GAAIqH,EAAS,sBAAD,OAAwBA,GAAY,aAAtD,gBC+CfE,GA7FQ,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,SAAU1I,EAAc,EAAdA,QAAc,EACxBC,mBAAS,IADe,mBACzCW,EADyC,KACnCoJ,EADmC,OAEtB/J,mBAAS,IAFa,mBAEzCwJ,EAFyC,KAElCC,EAFkC,OAGhBzJ,mBAAS,IAHO,mBAGzC0J,EAHyC,KAG/BC,EAH+B,OAIF3J,mBAAS,IAJP,mBAIzCgK,EAJyC,KAIxBC,EAJwB,OAKlBjK,mBAAS,MALS,mBAKzC+B,EALyC,KAKhCmI,EALgC,KAO1C9I,EAAWa,cAEXtE,EAAeuE,aAAY,SAACrG,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBkM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEhD,qBAAU,WACJlI,GACFqC,EAAQS,KAAKoJ,KAEd,CAAC7J,EAASrC,EAAUkM,IAWvB,OACE,kBAAC,GAAD,KACE,uCACC7H,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtC1F,GAAS,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAACkE,EAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACEoJ,IAAaM,EACfE,EAAW,2BAEX9I,EhBsCkB,SAACT,EAAM6I,EAAOE,GAAd,8CAA2B,WAAOtI,GAAP,mBAAAE,EAAA,sEAE/CF,EAAS,CACPpF,KLtE+B,0BKyE3BuF,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,IAAMqG,KAC3B,aACA,CAAErH,OAAM6I,QAAOE,YACfnI,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRT,EAAS,CACPpF,KLrF+B,wBKsF/BE,QAAS2F,IAGXT,EAAS,CACPpF,KL/F4B,qBKgG5BE,QAAS2F,IAGXhD,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAU1G,IA5BD,kDA8B/CT,EAAS,CACPpF,KLhG4B,qBKiG5BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAnCiC,0DAA3B,sDgBtCToI,CAASxJ,EAAM6I,EAAOE,MAW7B,kBAACvJ,EAAA,EAAK8H,MAAN,CAAYC,UAAU,QACpB,kBAAC/H,EAAA,EAAKgI,MAAN,aACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO0J,EAAQ1J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,sBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,QACL+E,YAAY,cACZD,MAAO0I,EACP5I,SAAU,SAACP,GAAD,OAAOoJ,EAASpJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,YACpB,kBAAC/H,EAAA,EAAKgI,MAAN,iBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,WACL+E,YAAY,iBACZD,MAAO4I,EACP9I,SAAU,SAACP,GAAD,OAAOsJ,EAAYtJ,EAAEQ,OAAOC,WAI1C,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,mBACpB,kBAAC/H,EAAA,EAAKgI,MAAN,yBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,WACL+E,YAAY,mBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAmB5J,EAAEQ,OAAOC,WAIjD,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,aAKF,kBAACtB,EAAA,EAAD,CAAKE,UAAU,QACb,kBAACD,EAAA,EAAD,wBACmB,IACjB,kBAAC,OAAD,CAAM2C,GAAIqH,EAAQ,0BAAsBA,GAAa,UAArD,a,UCqEKQ,GAzJO,SAAC,GAA0B,EAAxB3B,SAAyB,IAAf1I,EAAc,EAAdA,QAAc,EACvBC,mBAAS,IADc,mBACxCW,EADwC,KAClCoJ,EADkC,OAErB/J,mBAAS,IAFY,mBAExCwJ,EAFwC,KAEjCC,EAFiC,OAGfzJ,mBAAS,IAHM,mBAGxC0J,EAHwC,KAG9BC,EAH8B,OAID3J,mBAAS,IAJR,mBAIxCgK,EAJwC,KAIvBC,EAJuB,OAKjBjK,mBAAS,MALQ,mBAKxC+B,EALwC,KAK/BmI,EAL+B,KAOzC9I,EAAWa,cAEXrE,EAAcsE,aAAY,SAACrG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkBwF,aAAY,SAACrG,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAcyD,aAAY,SAACrG,GAAD,OAAWA,EAAM4C,eAChC4L,EAA8C5L,EAAvDxC,QAA+BqO,EAAwB7L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDkH,qBAAU,WACHlI,EAGEG,EAAK8C,MAIRoJ,EAAQlM,EAAK8C,MACb8I,EAAS5L,EAAK2L,SAJdpI,EAASF,EAAe,YACxBE,ECmIoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE9BF,EAAS,CACPpF,KrB7J+B,0BqB0JH,EAQ1BqF,IADW3D,EAPe,EAO5BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZR,SAgBPC,IAAMC,IAAN,uBAAkCL,GAhB3B,gBAgBtBM,EAhBsB,EAgBtBA,KAERT,EAAS,CACPpF,KrB5K+B,wBqB6K/BE,QAAS2F,IApBmB,kDAuB9BT,EAAS,CACPpF,KrBhL4B,qBqBiL5BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BgB,0DAAN,0DDvItBhC,EAAQS,KAAK,YAUd,CAACY,EAAUrB,EAASrC,EAAUG,IAWjC,OACE,kBAAC8B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,4CACC7E,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtC1F,GAAS,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GACpCK,GAAW,kBAAC,EAAD,CAASuE,QAAQ,WAAjB,mBACXhF,GAAW,kBAAC,EAAD,MACZ,kBAACkE,EAAA,EAAD,CAAMC,SAjBU,SAACC,GACrBA,EAAEC,iBACEoJ,IAAaM,EACfE,EAAW,2BAEX9I,EjBiG2B,SAACvD,GAAD,8CAAU,WAAOuD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEvCF,EAAS,CACPpF,KLvIqC,gCKoIA,EAQnCqF,IADW3D,EAPwB,EAOrCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAbC,SAiBhBC,IAAM4I,IAAN,qBAAgC1M,EAAM0D,GAjBtB,gBAiB/BM,EAjB+B,EAiB/BA,KAERT,EAAS,CACPpF,KLvJqC,8BKwJrCE,QAAS2F,IArB4B,kDAwBvCT,EAAS,CACPpF,KL3JkC,2BK4JlCE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7ByB,0DAAV,wDiBjGlByI,CAAkB,CAAErJ,GAAItD,EAAK+F,IAAKjD,OAAM6I,QAAOE,gBAapD,kBAACvJ,EAAA,EAAK8H,MAAN,CAAYC,UAAU,QACpB,kBAAC/H,EAAA,EAAKgI,MAAN,aACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO0J,EAAQ1J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,sBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,QACL+E,YAAY,cACZD,MAAO0I,EACP5I,SAAU,SAACP,GAAD,OAAOoJ,EAASpJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,YACpB,kBAAC/H,EAAA,EAAKgI,MAAN,iBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,WACL+E,YAAY,iBACZD,MAAO4I,EACP9I,SAAU,SAACP,GAAD,OAAOsJ,EAAYtJ,EAAEQ,OAAOC,WAI1C,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,mBACpB,kBAAC/H,EAAA,EAAKgI,MAAN,yBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,WACL+E,YAAY,mBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAmB5J,EAAEQ,OAAOC,WAIjD,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,YAKJ,kBAACrB,EAAA,EAAD,CAAKgH,GAAI,GACP,yCACCyD,EACC,kBAAC,EAAD,MACEC,EACF,kBAAC,EAAD,CAASrJ,QAAQ,UAAUqJ,GAE3B,kBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACGnB,EAAOpB,KAAI,SAACc,GAAD,OACV,wBAAIkH,IAAKlH,EAAMwF,KACb,4BAAKxF,EAAMwF,KACX,4BAAKxF,EAAMyJ,UAAUC,UAAU,EAAG,KAClC,4BAAK1J,EAAM0M,YACX,4BACG1M,EAAM2M,OACL3M,EAAM4M,OAAOlD,UAAU,EAAG,IAE1B,uBAAGjI,UAAU,eAAe2D,MAAO,CAAED,MAAO,UAGhD,4BACGnF,EAAM6M,YACL7M,EAAM8M,YAAYpD,UAAU,EAAG,IAE/B,uBAAGjI,UAAU,eAAe2D,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAehB,GAAE,iBAAYnE,EAAMwF,MACjC,kBAAC5C,EAAA,EAAD,CAAQnB,UAAU,SAASoB,QAAQ,SAAnC,sBEjGPkK,GA9CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,kBAAC1I,EAAA,EAAD,CAAKhD,UAAU,+BACb,kBAACgD,EAAA,EAAII,KAAL,KACGmI,EACC,kBAAC,gBAAD,CAAe7I,GAAG,UAChB,kBAACM,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU4E,UAAQ,GAAlB,YAIJ,kBAAC7E,EAAA,EAAII,KAAL,KACGoI,EACC,kBAAC,gBAAD,CAAe9I,GAAG,aAChB,kBAACM,EAAA,EAAIC,KAAL,kBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU4E,UAAQ,GAAlB,aAIJ,kBAAC7E,EAAA,EAAII,KAAL,KACGqI,EACC,kBAAC,gBAAD,CAAe/I,GAAG,YAChB,kBAACM,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU4E,UAAQ,GAAlB,YAIJ,kBAAC7E,EAAA,EAAII,KAAL,KACGsI,EACC,kBAAC,gBAAD,CAAehJ,GAAG,eAChB,kBAACM,EAAA,EAAIC,KAAL,qBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAU4E,UAAQ,GAAlB,kBCsCK8D,GA1EQ,SAAC,GAAiB,IAAfzL,EAAc,EAAdA,QAEhB9C,EADKiF,aAAY,SAACrG,GAAD,OAAWA,EAAMkB,QAClCE,gBAF8B,EAIR+C,mBAAS/C,EAAgBwO,SAJjB,mBAI/BA,EAJ+B,KAItBC,EAJsB,OAKd1L,mBAAS/C,EAAgB0O,MALX,mBAK/BA,EAL+B,KAKzBC,EALyB,OAMF5L,mBAAS/C,EAAgB4O,YANvB,mBAM/BA,EAN+B,KAMnBC,EANmB,OAOR9L,mBAAS/C,EAAgB8O,SAPjB,mBAO/BA,EAP+B,KAOtBC,EAPsB,KAShC5K,EAAWa,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAemJ,OAAK,EAACC,OAAK,IAC1B,wCACA,kBAAClL,EAAA,EAAD,CAAMC,SAVY,SAACC,GRgBU,IAACwB,EQfhCxB,EAAEC,iBACFc,GRcgCS,EQdH,CAAE4J,UAASE,OAAME,aAAYE,WRcjB,SAAC3K,GAC5CA,EAAS,CACPpF,KnBjCsC,6BmBkCtCE,QAAS2F,IAGXhD,aAAayJ,QAAQ,kBAAmBvJ,KAAKwJ,UAAU1G,OQnBrD9B,EAAQS,KAAK,cAQT,kBAACL,EAAA,EAAK8H,MAAN,CAAYC,UAAU,WACpB,kBAAC/H,EAAA,EAAKgI,MAAN,gBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,gBACZD,MAAO2K,EACPQ,UAAQ,EACRrL,SAAU,SAACP,GAAD,OAAOqL,EAAWrL,EAAEQ,OAAOC,WAIzC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,QACpB,kBAAC/H,EAAA,EAAKgI,MAAN,aACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,aACZD,MAAO6K,EACPM,UAAQ,EACRrL,SAAU,SAACP,GAAD,OAAOuL,EAAQvL,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,cACpB,kBAAC/H,EAAA,EAAKgI,MAAN,oBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,oBACZD,MAAO+K,EACPI,UAAQ,EACRrL,SAAU,SAACP,GAAD,OAAOyL,EAAczL,EAAEQ,OAAOC,WAI5C,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,WACpB,kBAAC/H,EAAA,EAAKgI,MAAN,gBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,gBACZD,MAAOiL,EACPE,UAAQ,EACRrL,SAAU,SAACP,GAAD,OAAO2L,EAAW3L,EAAEQ,OAAOC,WAIzC,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,eCZOiL,GAtDO,SAAC,GAAiB,IAAfnM,EAAc,EAAdA,QACVmC,aAAY,SAACrG,GAAD,OAAWA,EAAMkB,QAClCE,iBAGN8C,EAAQS,KAAK,aALsB,MAQKR,mBAAS,UARd,mBAQ9BxC,EAR8B,KAQf2O,EARe,KAU/B/K,EAAWa,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAemJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAACnL,EAAA,EAAD,CAAMC,SAVY,SAACC,GTwBQ,IAACwB,ESvB9BxB,EAAEC,iBACFc,GTsB8BS,EStBHrE,ETsBY,SAAC4D,GAC1CA,EAAS,CACPpF,KnBzCoC,2BmB0CpCE,QAAS2F,IAGXhD,aAAayJ,QAAQ,gBAAiBvJ,KAAKwJ,UAAU1G,OS3BnD9B,EAAQS,KAAK,iBAQT,kBAACL,EAAA,EAAK8H,MAAN,KACE,kBAAC9H,EAAA,EAAKgI,MAAN,CAAYjE,GAAG,UAAf,iBAEA,kBAACtE,EAAA,EAAD,KACE,kBAACO,EAAA,EAAKiM,MAAN,CACEpQ,KAAK,QACLqQ,MAAM,wBACNlL,GAAG,SACHR,KAAK,gBACLG,MAAM,SACNwL,SAAO,EACP1L,SAAU,SAACP,GAAD,OAAO8L,EAAiB9L,EAAEQ,OAAOC,YAYjD,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,eCqGOsL,GAlJU,SAAC,GAAiB,IAAfxM,EAAc,EAAdA,QACpBqB,EAAWa,cACXlF,EAAOmF,aAAY,SAACrG,GAAD,OAAWA,EAAMkB,QAEpCyP,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAE/CrM,EAAK6P,WAAaJ,EAChBzP,EAAKC,UAAUkM,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAKoH,MAAQpH,EAAK8J,MAAK,IAEpEjK,EAAK8P,cAAgBL,EAAYzP,EAAK6P,WAAa,IAAM,EAAI,IAC7D7P,EAAK+P,SAAWN,EAAY7D,QAAQ,IAAO5L,EAAK6P,YAAYxD,QAAQ,KACpErM,EAAK+N,YACHnC,OAAO5L,EAAK6P,YACZjE,OAAO5L,EAAK8P,eACZlE,OAAO5L,EAAK+P,WACZ1D,QAAQ,GAEV,IAAMjL,EAAc+D,aAAY,SAACrG,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBuJ,qBAAU,WACJlJ,GACFqD,EAAQS,KAAR,iBAAuBpC,EAAMwF,QAG9B,CAAC7D,EAASrD,EAASL,IAgBtB,OACE,oCACE,kBAAC,GAAD,CAAe+O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAAC5L,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,wCACA,2BACE,4CACClG,EAAKE,gBAAgBwO,QAFxB,KAEmC1O,EAAKE,gBAAgB0O,KAAM,IAC3D5O,EAAKE,gBAAgB4O,WAHxB,IAGqC,IAClC9O,EAAKE,gBAAgB8O,UAG1B,kBAACvE,GAAA,EAAUvE,KAAX,KACE,8CACA,4CACClG,EAAKS,eAER,kBAACgK,GAAA,EAAUvE,KAAX,KACE,2CAC2B,IAA1BlG,EAAKC,UAAU2K,OACd,kBAAC,EAAD,4BAEA,kBAACH,GAAA,EAAD,CAAWvG,QAAQ,SAChBlE,EAAKC,UAAUM,KAAI,SAACJ,EAAM6P,GAAP,OAClB,kBAACvF,GAAA,EAAUvE,KAAX,CAAgBqC,IAAKyH,GACnB,kBAACpN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACb,EAAA,EAAD,CACEjC,IAAK5G,EAAK6G,MACViC,IAAK9I,EAAKyD,KACVsF,OAAK,EACLgD,SAAO,KAGX,kBAACrJ,EAAA,EAAD,KACE,kBAAC,OAAD,CAAM2C,GAAE,mBAAcrF,EAAKX,UACxBW,EAAKyD,OAGV,kBAACf,EAAA,EAAD,CAAKgH,GAAI,GACN1J,EAAK8J,IADR,OACiB9J,EAAKoH,MADtB,OACiCpH,EAAK8J,IAAM9J,EAAKoH,gBAUjE,kBAAC1E,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACjD,EAAA,EAAD,KACE,kBAAC6D,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,8CAEF,kBAACuE,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO7C,EAAK6P,cAGhB,kBAACpF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAO7C,EAAK8P,iBAGhB,kBAACrF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAO7C,EAAK+P,YAGhB,kBAACtF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO7C,EAAK+N,cAGhB,kBAACtD,GAAA,EAAUvE,KAAX,KACG5G,GAAS,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,IAEvC,kBAACmL,GAAA,EAAUvE,KAAX,KACE,kBAACjC,EAAA,EAAD,CACEhF,KAAK,SACL6D,UAAU,YACV6H,SAA6B,IAAnB3K,EAAKC,UACfkG,QAzGU,WACxB9B,EJfuB,SAAChD,GAAD,8CAAW,WAAOgD,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACPpF,KrBzB8B,yBqBsBE,EAQ9BqF,IADW3D,EAPmB,EAOhCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAbJ,SAiBXC,IAAMqG,KAAN,cAA0B5J,EAAOmD,GAjBtB,gBAiB1BM,EAjB0B,EAiB1BA,KAERT,EAAS,CACPpF,KrBzC8B,uBqB0C9BE,QAAS2F,IArBuB,kDAwBlCT,EAAS,CACPpF,KrB7C2B,oBqB8C3BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BoB,0DAAX,wDIgBrBiL,CAAY,CACV1O,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBoP,WAAY7P,EAAK6P,WACjBC,cAAe9P,EAAK8P,cACpBC,SAAU/P,EAAK+P,SACfhC,WAAY/N,EAAK+N,gBA4FT,sB,SC2FDmC,GAlNK,SAAC,GAAwB,IAoBpBR,EApBFhG,EAAqB,EAArBA,MAAO1G,EAAc,EAAdA,QACtBmN,EAAUzG,EAAMC,OAAOvF,GADa,EAGVnB,oBAAS,GAHC,mBAGnCmN,EAHmC,KAGzBC,EAHyB,KAKpChM,EAAWa,cAEX5D,EAAe6D,aAAY,SAACrG,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAW2D,aAAY,SAACrG,GAAD,OAAWA,EAAM0C,YAC7B8O,EAAoC9O,EAA7CtC,QAA8BqR,EAAe/O,EAAxB7B,QAEvB8B,EAAe0D,aAAY,SAACrG,GAAD,OAAWA,EAAM2C,gBACjC+O,EAA4C/O,EAArDvC,QAAkCuR,EAAmBhP,EAA5B9B,QAGzBgB,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAER,IAAKzB,EAAS,CAIZmC,EAAMwO,YAHeH,EAInBrO,EAAME,WAAW4K,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAKoH,MAAQpH,EAAK8J,MAAK,IAH5D0F,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAOjDxD,qBAAU,WACHlI,GACHqC,EAAQS,KAAK,UAEf,ILM4BW,EKNtBsM,EAAe,uCAAG,gCAAAnM,EAAA,sEACWK,IAAMC,IAAI,sBADrB,gBACR8L,EADQ,EACd7L,MACF8L,EAASC,SAASC,cAAc,WAC/B7R,KAAO,kBACd2R,EAAO7J,IAAP,kDAAwD4J,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdX,GAAY,IAEdQ,SAASI,KAAKC,YAAYN,GATJ,4CAAH,sDAYhBvP,GAASkP,GAAcE,GAC1BpM,EAAS,CAAEpF,K1BpDc,oB0BqDzBoF,EAAS,CAAEpF,K1BvCkB,wB0BwC7BoF,GLT0BD,EKSD+L,ELTA,uCAAQ,WAAO9L,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACPpF,KrBvD+B,0BqBoDE,EAQ/BqF,IADW3D,EAPoB,EAOjCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZH,SAgBZC,IAAMC,IAAN,sBAAyBT,GAAMI,GAhBnB,gBAgB3BM,EAhB2B,EAgB3BA,KAERT,EAAS,CACPpF,KrBtE+B,wBqBuE/BE,QAAS2F,IApBwB,kDAuBnCT,EAAS,CACPpF,KrB1E4B,qBqB2E5BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BqB,0DAAR,2DKUf3D,EAAM2M,SACXmD,OAAOC,OAGVf,GAAY,GAFZK,OAKH,CAACrM,EAAUhD,EAAO8O,EAASM,EAAgBF,IAW9C,OAAOrR,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,oCACE,qCAAW+B,EAAMwF,KACjB,kBAACjE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,wCACA,2BACE,0CACC7E,EAAMP,KAAK8C,KACZ,6BACA,2CACA,uBAAGyN,KAAI,iBAAYhQ,EAAMP,KAAK2L,QAAUpL,EAAMP,KAAK2L,QAErD,2BACE,4CACCpL,EAAMnB,gBAAgBwO,QAFzB,KAEoCrN,EAAMnB,gBAAgB0O,KAAM,IAC7DvN,EAAMnB,gBAAgB4O,WAHzB,IAGsC,IACnCzN,EAAMnB,gBAAgB8O,SAExB3N,EAAM6M,YACL,kBAAC,EAAD,CAAShK,QAAQ,WAAjB,gBACgB7C,EAAM8M,aAGtB,kBAAC,EAAD,CAASjK,QAAQ,UAAjB,kBAGJ,kBAACuG,GAAA,EAAUvE,KAAX,KACE,8CACA,2BACE,4CACC7E,EAAMZ,eAERY,EAAM2M,OACL,kBAAC,EAAD,CAAS9J,QAAQ,WAAjB,WAAoC7C,EAAM4M,QAE1C,kBAAC,EAAD,CAAS/J,QAAQ,UAAjB,aAGJ,kBAACuG,GAAA,EAAUvE,KAAX,KACE,2CAC6B,IAA5B7E,EAAME,WAAWqJ,OAChB,kBAAC,EAAD,wBAEA,kBAACH,GAAA,EAAD,CAAWvG,QAAQ,SAChB7C,EAAME,WAAWhB,KAAI,SAACJ,EAAM6P,GAAP,OACpB,kBAACvF,GAAA,EAAUvE,KAAX,CAAgBqC,IAAKyH,GACnB,kBAACpN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACb,EAAA,EAAD,CACEjC,IAAK5G,EAAK6G,MACViC,IAAK9I,EAAKyD,KACVsF,OAAK,EACLgD,SAAO,KAGX,kBAACrJ,EAAA,EAAD,KACE,kBAAC,OAAD,CAAM2C,GAAE,mBAAcrF,EAAKX,UACxBW,EAAKyD,OAGV,kBAACf,EAAA,EAAD,CAAKgH,GAAI,GACN1J,EAAK8J,IADR,OACiB9J,EAAKoH,MADtB,OACiCpH,EAAK8J,IAAM9J,EAAKoH,gBAUjE,kBAAC1E,EAAA,EAAD,CAAKgH,GAAI,GACP,kBAACjD,EAAA,EAAD,KACE,kBAAC6D,GAAA,EAAD,CAAWvG,QAAQ,SACjB,kBAACuG,GAAA,EAAUvE,KAAX,KACE,8CAEF,kBAACuE,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOxB,EAAMwO,cAGjB,kBAACpF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOxB,EAAMyO,iBAGjB,kBAACrF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOxB,EAAM0O,YAGjB,kBAACtF,GAAA,EAAUvE,KAAX,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOxB,EAAM0M,eAGf1M,EAAM2M,QACN,kBAACvD,GAAA,EAAUvE,KAAX,KACGoK,GAAc,kBAAC,EAAD,MACbF,EAGA,kBAAC,gBAAD,CACEkB,OAAQjQ,EAAM0M,WACdwD,UA7HU,SAACC,GAC7B1F,QAAQC,IAAIyF,GACZnN,ELYoB,SAAC8L,EAASqB,GAAV,8CAA4B,WAClDnN,EACAC,GAFkD,uBAAAC,EAAA,sEAKhDF,EAAS,CACPpF,KrBvF2B,sBqBiFmB,EAW5CqF,IADW3D,EAViC,EAU9CD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAhBU,SAoBzBC,IAAM4I,IAAN,sBACN2C,EADM,QAErBqB,EACAhN,GAvB8C,gBAoBxCM,EApBwC,EAoBxCA,KAMRT,EAAS,CACPpF,KrB3G2B,oBqB4G3BE,QAAS2F,IA5BqC,kDA+BhDT,EAAS,CACPpF,KrB/GwB,iBqBgHxBE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UApCkC,0DAA5B,wDKZXyM,CAAStB,EAASqB,OAuHX,kBAAC,EAAD,OASLhB,GAAkB,kBAAC,EAAD,MAClB7P,GACCA,EAAS0F,SACThF,EAAM2M,SACL3M,EAAM6M,aACL,kBAACzD,GAAA,EAAUvE,KAAX,KACE,kBAACjC,EAAA,EAAD,CACEhF,KAAK,SACL6D,UAAU,gBACVqD,QAtIG,WACrB9B,ELiDwB,SAAChD,GAAD,8CAAW,WAAOgD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACPpF,KrB/G+B,0BqB4GE,EAQ/BqF,IADW3D,EAPoB,EAOjCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZH,SAgBZC,IAAM4I,IAAN,sBACNnM,EAAMwF,IADA,YAErB,GACArC,GAnBiC,gBAgB3BM,EAhB2B,EAgB3BA,KAMRT,EAAS,CACPpF,KrBlI+B,wBqBmI/BE,QAAS2F,IAxBwB,kDA2BnCT,EAAS,CACPpF,KrBtI4B,qBqBuI5BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCqB,0DAAX,wDKjDf0M,CAAarQ,MAkIN,4BCjILsQ,GA1ES,SAAC,GAAiB,IAAf3O,EAAc,EAAdA,QACnBqB,EAAWa,cAEXtD,EAAYuD,aAAY,SAACrG,GAAD,OAAWA,EAAM8C,aACvC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAUR,OARAkI,qBAAU,WACJlI,GAAYA,EAAS0F,QACvBhC,ENqLoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE5BF,EAAS,CACPpF,KrBzL4B,uBqBsLF,EAQxBqF,IADW3D,EAPa,EAO1BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZV,SAgBLC,IAAMC,IAAN,cAAyBL,GAhBpB,gBAgBpBM,EAhBoB,EAgBpBA,KAERT,EAAS,CACPpF,KrBxM4B,qBqByM5BE,QAAS2F,IApBiB,kDAuB5BT,EAAS,CACPpF,KrB5MyB,kBqB6MzBE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5Bc,0DAAN,yDMnLpBhC,EAAQS,KAAK,YAEd,CAACY,EAAUrB,EAASrC,IAGrB,oCACE,sCACCzB,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,kBAACoO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACGnB,EAAOpB,KAAI,SAACc,GAAD,OACV,wBAAIkH,IAAKlH,EAAMwF,KACb,4BAAKxF,EAAMwF,KACX,4BAAKxF,EAAMP,MAAQO,EAAMP,KAAK8C,MAC9B,4BAAKvC,EAAMyJ,UAAUC,UAAU,EAAG,KAClC,gCAAM1J,EAAM0M,YACZ,4BACG1M,EAAM2M,OACL3M,EAAM4M,OAAOlD,UAAU,EAAG,IAE1B,uBAAGjI,UAAU,eAAe2D,MAAO,CAAED,MAAO,UAGhD,4BACGnF,EAAM6M,YACL7M,EAAM8M,YAAYpD,UAAU,EAAG,IAE/B,uBAAGjI,UAAU,eAAe2D,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAehB,GAAE,iBAAYnE,EAAMwF,MACjC,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQpB,UAAU,UAAlC,qBCqBL8O,GAjFQ,SAAC,GAAiB,IAAf5O,EAAc,EAAdA,QAClBqB,EAAWa,cACXlE,EAAWmE,aAAY,SAACrG,GAAD,OAAWA,EAAMkC,YACtC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAGSkR,EADE1M,aAAY,SAACrG,GAAD,OAAWA,EAAMoC,cACxCvB,QAERkJ,qBAAU,WACJlI,GAAYA,EAAS0F,QACvBhC,EzB+JmB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE3BF,EAAS,CACPpF,KLpK2B,sBKiKF,EAQvBqF,IADW3D,EAPY,EAOzBD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZX,SAgBJC,IAAMC,IAAN,aAAwBL,GAhBpB,gBAgBnBM,EAhBmB,EAgBnBA,KAERT,EAAS,CACPpF,KLnL2B,oBKoL3BE,QAAS2F,IApBgB,kDAuB3BT,EAAS,CACPpF,KLvLwB,iBKwLxBE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5Ba,0DAAN,yDyB7JnBhC,EAAQS,KAAK,YAEd,CAACY,EAAUrB,EAAS6O,EAAelR,IAEtC,IAAMmR,EAAgB,SAAC1N,GACjB+M,OAAOY,QAAQ,iBACjB1N,EzBwLoB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE9BF,EAAS,CACPpF,KLhM6B,wBK6LD,EAQ1BqF,IADW3D,EAPe,EAO5BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZR,SAgBxBC,IAAMoN,OAAN,qBAA2B5N,GAAMI,GAhBT,OAkB9BH,EAAS,CACPpF,KL/M6B,wBK4LD,gDAsB9BoF,EAAS,CACPpF,KLlN0B,mBKmN1BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BgB,yDAAR,wDyBxLXiN,CAAW7N,KAIxB,OACE,oCACE,qCACClF,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,kBAACoO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,qCACA,+BAGJ,+BACG7B,EAAMV,KAAI,SAACO,GAAD,OACT,wBAAIyH,IAAKzH,EAAK+F,KACZ,4BAAK/F,EAAK+F,KACV,4BAAK/F,EAAK8C,MACV,4BACE,uBAAGyN,KAAI,iBAAYvQ,EAAK2L,QAAU3L,EAAK2L,QAEzC,4BACG3L,EAAKuF,QACJ,uBAAGvD,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAE5C,uBAAG1D,UAAU,eAAe2D,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAehB,GAAE,sBAAiB1E,EAAK+F,IAAtB,UACf,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQpB,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACmB,EAAA,EAAD,CACEC,QAAQ,SACRpB,UAAU,SACVqD,QAAS,kBAAM2L,EAAchR,EAAK+F,OAElC,uBAAG/D,UAAU,2BC0BlBoP,GA7FQ,SAAC,GAAwB,IAAtBxI,EAAqB,EAArBA,MAAO1G,EAAc,EAAdA,QACzBmP,EAASzI,EAAMC,OAAOvF,GADiB,EAGrBnB,mBAAS,IAHY,mBAGtCW,EAHsC,KAGhCoJ,EAHgC,OAInB/J,mBAAS,IAJU,mBAItCwJ,EAJsC,KAI/BC,EAJ+B,OAKfzJ,oBAAS,GALM,mBAKtCoD,EALsC,KAK7B+L,EAL6B,KAOvC/N,EAAWa,cAEXrE,EAAcsE,aAAY,SAACrG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAagE,aAAY,SAACrG,GAAD,OAAWA,EAAMqC,cAErCkR,EAGPlR,EAHFjC,QACOoT,EAELnR,EAFF7B,MACSiT,EACPpR,EADFxB,QAGFkJ,qBAAU,WACJ0J,GACFlO,EAAS,CAAEpF,K/BAgB,sB+BC3B+D,EAAQS,KAAK,oBAER3C,EAAK8C,MAAQ9C,EAAK+F,MAAQsL,GAG7BnF,EAAQlM,EAAK8C,MACb8I,EAAS5L,EAAK2L,OACd2F,EAAWtR,EAAKuF,UAJhBhC,EAASF,EAAegO,MAO3B,CAAC9N,EAAUrB,EAASmP,EAAQrR,EAAMyR,IAOrC,OACE,oCACE,kBAAC,OAAD,CAAM/M,GAAG,kBAAkB1C,UAAU,sBAArC,WAGA,kBAAC,GAAD,KACE,yCACCuP,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASpO,QAAQ,UAAUoO,GAC1CpT,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,kBAAC8D,EAAA,EAAD,CAAMC,SAnBQ,SAACC,GACrBA,EAAEC,iBACFc,E1BuMsB,SAACvD,GAAD,8CAAU,WAAOuD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEhCF,EAAS,CACPpF,KL5N6B,wBKyNC,EAQ5BqF,IADW3D,EAPiB,EAO9BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAbN,SAiBTC,IAAM4I,IAAN,qBAAwB1M,EAAK+F,KAAO/F,EAAM0D,GAjBjC,gBAiBxBM,EAjBwB,EAiBxBA,KAERT,EAAS,CACPpF,KL5O6B,wBK8O/BoF,EAAS,CACPpF,KLlQ8B,uBKmQ9BE,QAAS2F,IAxBqB,kDA2BhCT,EAAS,CACPpF,KLnP0B,mBKoP1BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCkB,0DAAV,wD0BvMbwN,CAAW,CAAE3L,IAAKsL,EAAQvO,OAAM6I,QAAOpG,eAkBxC,kBAACjD,EAAA,EAAK8H,MAAN,CAAYC,UAAU,QACpB,kBAAC/H,EAAA,EAAKgI,MAAN,aACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO0J,EAAQ1J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,sBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,QACL+E,YAAY,cACZD,MAAO0I,EACP5I,SAAU,SAACP,GAAD,OAAOoJ,EAASpJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,WACpB,kBAAC/H,EAAA,EAAKiM,MAAN,CACEpQ,KAAK,WACLqQ,MAAM,WACNC,QAASlJ,EACTxC,SAAU,SAACP,GAAD,OAAO8O,EAAW9O,EAAEQ,OAAOyL,aAIzC,kBAACtL,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,cC4CGuO,GA3HW,SAAC,GAAwB,IAAtBzP,EAAqB,EAArBA,QACrB0F,EAD0C,EAAZgB,MACXC,OAAOjB,YAAc,EAExCrE,EAAWa,cAEXrG,EAAcsG,aAAY,SAACrG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAElCM,EAAgByF,aAAY,SAACrG,GAAD,OAAWA,EAAMY,iBAExCgT,EAGPhT,EAHFR,QACOyT,EAELjT,EAFFJ,MACSuS,EACPnS,EADFC,QAGIC,EAAgBuF,aAAY,SAACrG,GAAD,OAAWA,EAAMc,iBAExCgT,EAIPhT,EAJFV,QACO2T,EAGLjT,EAHFN,MACSwT,EAEPlT,EAFFD,QACSoT,EACPnT,EADFJ,QAIMmB,EADUwE,aAAY,SAACrG,GAAD,OAAWA,EAAM4B,aACvCC,SAERkI,qBAAU,WACRxE,EAAS,CAAEpF,KpC1BqB,yBoC4B3B0B,EAAS0F,SACZrD,EAAQS,KAAK,UAEXqP,EACF9P,EAAQS,KAAR,yBAA+BsP,EAAelM,IAA9C,UAEAxC,EAASoE,EAAa,GAAIC,MAE3B,CACDrE,EACArB,EACArC,EACAkR,EACAiB,EACAC,EACArK,IAGF,IAAMoJ,EAAgB,SAAC1N,GACjB+M,OAAOY,QAAQ,iBACjB1N,EpBFuB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAEjCF,EAAS,CACPpF,KhBxDgC,2BgBqDD,EAQ7BqF,IADW3D,EAPkB,EAO/BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZL,SAgB3BC,IAAMoN,OAAN,wBAA8B5N,GAAMI,GAhBT,OAkBjCH,EAAS,CACPpF,KhBvEgC,2BgBoDD,gDAsBjCoF,EAAS,CACPpF,KhB1E6B,sBgB2E7BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BmB,yDAAR,wDoBEdgO,CAAc5O,KAQ3B,OACE,oCACE,kBAACxB,EAAA,EAAD,CAAKE,UAAU,sBACb,kBAACD,EAAA,EAAD,KACE,yCAEF,kBAACA,EAAA,EAAD,CAAKC,UAAU,cACb,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,OAAOqD,QAXJ,WAC3B9B,EpByByB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACPpF,KhBpFgC,2BgBiFH,EAQ3BqF,IADW3D,EAPgB,EAO7BD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY/D,EAASgE,SAZP,SAgBRC,IAAMqG,KAAN,gBAA4B,GAAIzG,GAhBxB,gBAgBvBM,EAhBuB,EAgBvBA,KAERT,EAAS,CACPpF,KhBnGgC,yBgBoGhCE,QAAS2F,IApBoB,kDAuB/BT,EAAS,CACPpF,KhBvG6B,sBgBwG7BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BiB,0DAAN,2DoBdjB,uBAAGlC,UAAU,gBADf,qBAKH4P,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASzO,QAAQ,UAAUyO,GAC1CC,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAAS3O,QAAQ,UAAU2O,GAC1C3T,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,oCACE,kBAACoO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,wCACA,qCACA,+BAGJ,+BACG/D,EAASwB,KAAI,SAACf,GAAD,OACZ,wBAAI+I,IAAK/I,EAAQqH,KACf,4BAAKrH,EAAQqH,KACb,4BAAKrH,EAAQoE,MACb,gCAAMpE,EAAQ+H,OACd,4BAAK/H,EAAQyT,UACb,4BAAKzT,EAAQ0T,OACb,4BACE,kBAAC,gBAAD,CAAe1N,GAAE,yBAAoBhG,EAAQqH,IAA5B,UACf,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQpB,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACmB,EAAA,EAAD,CACEC,QAAQ,SACRpB,UAAU,SACVqD,QAAS,kBAAM2L,EAActS,EAAQqH,OAErC,uBAAG/D,UAAU,yBAOzB,kBAAC,EAAD,CAAU1D,MAAOA,EAAOC,KAAMA,EAAMgH,SAAS,OC8DxC8M,GArLW,SAAC,GAAwB,IAAtBzJ,EAAqB,EAArBA,MAAO1G,EAAc,EAAdA,QAC5BgI,EAAYtB,EAAMC,OAAOvF,GADiB,EAGxBnB,mBAAS,IAHe,mBAGzCW,EAHyC,KAGnCoJ,EAHmC,OAItB/J,mBAAS,GAJa,mBAIzCsE,EAJyC,KAIlC6L,EAJkC,OAKtBnQ,mBAAS,IALa,mBAKzC+D,EALyC,KAKlCqM,EALkC,OAMtBpQ,mBAAS,IANa,mBAMzCiQ,EANyC,KAMlCI,EANkC,OAOhBrQ,mBAAS,IAPO,mBAOzCgQ,EAPyC,KAO/BM,EAP+B,OAQRtQ,mBAAS,GARD,mBAQzCyH,EARyC,KAQ3B8I,EAR2B,OASVvQ,mBAAS,IATC,mBASzCoG,EATyC,KAS5BoK,EAT4B,OAUdxQ,oBAAS,GAVK,mBAUzCyQ,EAVyC,KAU9BC,EAV8B,KAY1CtP,EAAWa,cAEX3F,EAAiB4F,aAAY,SAACrG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBM,EAAgBqF,aAAY,SAACrG,GAAD,OAAWA,EAAMgB,iBAExCuS,GAGPvS,EAHFZ,QACOoT,GAELxS,EAFFR,MACSiT,GACPzS,EADFH,QAGFkJ,qBAAU,WACJ0J,IACFlO,EAAS,CAAEpF,KrCjBmB,yBqCkB9B+D,EAAQS,KAAK,uBAERjE,EAAQoE,MAAQpE,EAAQqH,MAAQmE,GAGnCgC,EAAQxN,EAAQoE,MAChBwP,EAAS5T,EAAQ+H,OACjB8L,EAAS7T,EAAQwH,OACjBsM,EAAS9T,EAAQ0T,OACjBK,EAAY/T,EAAQyT,UACpBO,EAAgBhU,EAAQkL,cACxB+I,EAAejU,EAAQ6J,cARvBhF,EAASsE,GAAmBqC,MAW/B,CAAC3G,EAAUrB,EAASgI,EAAWxL,EAAS+S,KAE3C,IAAMqB,GAAiB,uCAAG,WAAOtQ,GAAP,uBAAAiB,EAAA,6DAClBsP,EAAOvQ,EAAEQ,OAAOgQ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJW,SAMhBnP,EAAS,CACbC,QAAS,CACP,eAAgB,wBARE,SAWCG,IAAMqG,KAAK,cAAe8I,EAAUvP,GAXrC,gBAWdM,EAXc,EAWdA,KACRuO,EAASvO,GACT6O,GAAa,GAbS,kDAetB7H,QAAQC,IAAR,MACA4H,GAAa,GAhBS,0DAAH,sDAoCvB,OACE,oCACE,kBAAC,OAAD,CAAMnO,GAAG,qBAAqB1C,UAAU,sBAAxC,WAGA,kBAAC,GAAD,KACE,4CACCuP,IAAiB,kBAAC,EAAD,MACjBC,IAAe,kBAAC,EAAD,CAASpO,QAAQ,UAAUoO,IAC1CpT,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAAS4E,QAAQ,UAAU5E,GAE3B,kBAAC8D,EAAA,EAAD,CAAMC,SA9BQ,SAACC,GACrBA,EAAEC,iBACFc,ErBkDyB,SAAC7E,GAAD,8CAAa,WAAO6E,EAAUC,GAAjB,uBAAAC,EAAA,sEAEtCF,EAAS,CACPpF,KhBhHgC,2BgB6GI,EAQlCqF,IADW3D,EAPuB,EAOpCD,UAAaC,SAGT6D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/D,EAASgE,SAbA,SAiBfC,IAAM4I,IAAN,wBACJhO,EAAQqH,KACzBrH,EACAgF,GApBoC,gBAiB9BM,EAjB8B,EAiB9BA,KAMRT,EAAS,CACPpF,KhBpIgC,yBgBqIhCE,QAAS2F,IAzB2B,kDA4BtCT,EAAS,CACPpF,KhBxI6B,sBgByI7BE,QACE,KAAM4F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCwB,0DAAb,wDqBjDvBkP,CAAc,CACZrN,IAAKmE,EACLpH,OACA2D,QACAP,QACAkM,QACAD,WACA5J,cACAqB,oBAoBI,kBAACtH,EAAA,EAAK8H,MAAN,CAAYC,UAAU,QACpB,kBAAC/H,EAAA,EAAKgI,MAAN,aACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO0J,EAAQ1J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,cACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,SACL+E,YAAY,cACZD,MAAOwD,EACP1D,SAAU,SAACP,GAAD,OAAO8P,EAAS9P,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,cACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,kBACZD,MAAOiD,EACPnD,SAAU,SAACP,GAAD,OAAO+P,EAAS/P,EAAEQ,OAAOC,UAErC,kBAACX,EAAA,EAAK+Q,KAAN,CACE/P,GAAG,aACHkL,MAAM,cACN8E,QAAM,EACNvQ,SAAU+P,KAEXF,GAAa,kBAAC,EAAD,OAGhB,kBAACtQ,EAAA,EAAK8H,MAAN,CAAYC,UAAU,SACpB,kBAAC/H,EAAA,EAAKgI,MAAN,cACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,cACZD,MAAOmP,EACPrP,SAAU,SAACP,GAAD,OAAOgQ,EAAShQ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,gBACpB,kBAAC/H,EAAA,EAAKgI,MAAN,uBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,SACL+E,YAAY,uBACZD,MAAO2G,EACP7G,SAAU,SAACP,GAAD,OAAOkQ,EAAgBlQ,EAAEQ,OAAOC,WAI9C,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,YACpB,kBAAC/H,EAAA,EAAKgI,MAAN,iBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,iBACZD,MAAOkP,EACPpP,SAAU,SAACP,GAAD,OAAOiQ,EAAYjQ,EAAEQ,OAAOC,WAI1C,kBAACX,EAAA,EAAK8H,MAAN,CAAYC,UAAU,eACpB,kBAAC/H,EAAA,EAAKgI,MAAN,oBACA,kBAAChI,EAAA,EAAKO,QAAN,CACE1E,KAAK,OACL+E,YAAY,oBACZD,MAAOsF,EACPxF,SAAU,SAACP,GAAD,OAAOmQ,EAAenQ,EAAEQ,OAAOC,WAI7C,kBAACE,EAAA,EAAD,CAAQhF,KAAK,SAASiF,QAAQ,WAA9B,cCrHGmQ,GA5CH,WACV,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,0BAAMvR,UAAU,QACd,kBAACH,EAAA,EAAD,KACE,kBAAC,IAAD,CAAO2R,KAAK,aAAaC,UAAWrE,KACpC,kBAAC,IAAD,CAAOoE,KAAK,YAAYC,UAAW9F,KACnC,kBAAC,IAAD,CAAO6F,KAAK,WAAWC,UAAWpF,KAClC,kBAAC,IAAD,CAAOmF,KAAK,cAAcC,UAAW/E,KACrC,kBAAC,IAAD,CAAO8E,KAAK,SAASC,UAAW/H,KAChC,kBAAC,IAAD,CAAO8H,KAAK,YAAYC,UAAWxH,KACnC,kBAAC,IAAD,CAAOuH,KAAK,WAAWC,UAAWlH,KAClC,kBAAC,IAAD,CAAOiH,KAAK,eAAeC,UAAWvK,KACtC,kBAAC,IAAD,CAAOsK,KAAK,aAAaC,UAAW9I,KACpC,kBAAC,IAAD,CAAO6I,KAAK,kBAAkBC,UAAW3C,KACzC,kBAAC,IAAD,CAAO0C,KAAK,uBAAuBC,UAAWrC,KAC9C,kBAAC,IAAD,CACEoC,KAAK,qBACLC,UAAW9B,GACX+B,OAAK,IAEP,kBAAC,IAAD,CACEF,KAAK,iCACLC,UAAW9B,GACX+B,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,0BAA0BC,UAAWpB,KACjD,kBAAC,IAAD,CAAOmB,KAAK,mBAAmBC,UAAW5C,KAC1C,kBAAC,IAAD,CAAO2C,KAAK,mBAAmBC,UAAW9K,GAAY+K,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAW9K,GAAY+K,OAAK,IAC5D,kBAAC,IAAD,CACEF,KAAK,oCACLC,UAAW9K,GACX+K,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAW9K,GAAY+K,OAAK,MAGhD,kBAAC,EAAD,QChDcC,QACW,cAA7BtD,OAAOzF,SAASgJ,UAEe,UAA7BvD,OAAOzF,SAASgJ,UAEhBvD,OAAOzF,SAASgJ,SAAShL,MACvB,2DCTNiL,IAAS9O,OACP,kBAAC,IAAD,CAAUvD,MAAOA,GACf,kBAAC,GAAD,OAEFuO,SAAS+D,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7V,GACLwM,QAAQxM,MAAMA,EAAM0F,a","file":"static/js/main.ec6f7f2d.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n// composeWithDevTools is used to setup Redux DevTools easilyç\r\n// applyMiddleware just applies whatever middlewares we use.\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n  value: 0,\r\n};\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\nexport default Message\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false }, keyword = '') => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n    const { data } = await axios.get(`/api/products/top`);\r\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome to Proshop!!!',\r\n  description: 'We sell best products',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\n\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  //   // We get the product which has id of parameter :id\r\n  //   const product = products.find((p) => p._id === match.params.id)\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted');\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(match.params.id, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-dark my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: ${product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  //console.log(qty);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty. <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                New Customer? <Link to={redirect? `/register?redirect=${redirect}`: '/register'}>Register</Link></Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success, error]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart Is Empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successDeliver, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n                <br></br>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order Is Empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts('', pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push('/admin/productlist');\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Count In Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}